/**
 * Copyright 2018 Novage LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { SegmentManager } from "./segment-manager.js";
import type { LoaderCallbacks, LoaderConfiguration, LoaderContext, LoaderStats } from "hls.js";
export declare class HlsJsLoader {
    private readonly segmentManager;
    private readonly debug;
    private interval;
    stats: LoaderStats;
    private boundOnSegmentAbort;
    private boundOnUpdateSegmentSize;
    private boundOnUpdateLoaded;
    private boundOnSegmentStartLoad;
    private context;
    private callbacks;
    private loader;
    private byteRange;
    private debugId;
    constructor(segmentManager: SegmentManager);
    load(context: LoaderContext, _config: LoaderConfiguration, callbacks: LoaderCallbacks<LoaderContext>): Promise<void>;
    abort(context: LoaderContext, callbacks?: LoaderCallbacks<LoaderContext>): void;
    private successPlaylist;
    private successSegment;
    private error;
    private cleanup;
    private onSegmentAbort;
    private onUpdateSegmentSize;
    private onUpdateLoaded;
    private onSegmentStartLoad;
    private isSegment;
    private static updateStatsToStartLoading;
}
