var e=["Shift","Meta","Alt","Control"],t="object"==typeof navigator?navigator.platform:"",n=/Mac|iPod|iPhone|iPad/.test(t),r=n?"Meta":"Control",i="Win32"===t?["Control","Alt"]:n?["Alt"]:[];function o(e,t){return"function"==typeof e.getModifierState&&(e.getModifierState(t)||i.includes(t)&&e.getModifierState("AltGraph"))}function a(e){return e.trim().split(" ").map(function(e){var t=e.split(/\b\+/),n=t.pop();return[t=t.map(function(e){return"$mod"===e?r:e}),n]})}function u(t,n){var r;void 0===n&&(n={});var i=null!=(r=n.timeout)?r:1e3,u=Object.keys(t).map(function(e){return[a(e),t[e]]}),c=new Map,f=null;return function(t){t instanceof KeyboardEvent&&(u.forEach(function(n){var r=n[0],i=n[1],a=c.get(r)||r;!function(t,n){return!(n[1].toUpperCase()!==t.key.toUpperCase()&&n[1]!==t.code||n[0].find(function(e){return!o(t,e)})||e.find(function(e){return!n[0].includes(e)&&n[1]!==e&&o(t,e)}))}(t,a[0])?o(t,t.key)||c.delete(r):a.length>1?c.set(r,a.slice(1)):(c.delete(r),i(t))}),f&&clearTimeout(f),f=setTimeout(c.clear.bind(c),i))}}exports.createKeybindingsHandler=u,exports.parseKeybinding=a,exports.tinykeys=function(e,t,n){var r;void 0===n&&(n={});var i=null!=(r=n.event)?r:"keydown",o=u(t,n);return e.addEventListener(i,o),function(){e.removeEventListener(i,o)}};
//# sourceMappingURL=tinykeys.js.map
