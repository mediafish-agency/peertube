let e=["Shift","Meta","Alt","Control"],t="object"==typeof navigator?navigator.platform:"",n=/Mac|iPod|iPhone|iPad/.test(t),o=n?"Meta":"Control",r="Win32"===t?["Control","Alt"]:n?["Alt"]:[];function i(e,t){return"function"==typeof e.getModifierState&&(e.getModifierState(t)||r.includes(t)&&e.getModifierState("AltGraph"))}function l(e){return e.trim().split(" ").map(e=>{let t=e.split(/\b\+/),n=t.pop();return t=t.map(e=>"$mod"===e?o:e),[t,n]})}function a(t,n={}){var o;let r=null!=(o=n.timeout)?o:1e3,a=Object.keys(t).map(e=>[l(e),t[e]]),u=new Map,d=null;return t=>{t instanceof KeyboardEvent&&(a.forEach(n=>{let o=n[0],r=n[1],l=u.get(o)||o;!function(t,n){return!(n[1].toUpperCase()!==t.key.toUpperCase()&&n[1]!==t.code||n[0].find(e=>!i(t,e))||e.find(e=>!n[0].includes(e)&&n[1]!==e&&i(t,e)))}(t,l[0])?i(t,t.key)||u.delete(o):l.length>1?u.set(o,l.slice(1)):(u.delete(o),r(t))}),d&&clearTimeout(d),d=setTimeout(u.clear.bind(u),r))}}function u(e,t,n={}){var o;let r=null!=(o=n.event)?o:"keydown",i=a(t,n);return e.addEventListener(r,i),()=>{e.removeEventListener(r,i)}}export{a as createKeybindingsHandler,l as parseKeybinding,u as tinykeys};
//# sourceMappingURL=tinykeys.modern.js.map
