const HOUR = 1000 * 60 * 60;
export class Store {
    constructor(prefix = 'UPLOADX-v4.0-') {
        this.prefix = prefix;
        this.ttl = 24 * HOUR;
    }
    set(key, value) {
        this.ttl &&
            localStorage.setItem(this.prefix + key, JSON.stringify([value, Date.now() + this.ttl]));
    }
    get(key) {
        const item = localStorage.getItem(this.prefix + key);
        if (item) {
            const [value, expires] = JSON.parse(item);
            return value && expires ? value : null;
        }
        return null;
    }
    delete(key) {
        localStorage.removeItem(this.prefix + key);
    }
    clear(maxAgeHours = 0) {
        this.ttl = maxAgeHours * HOUR;
        const now = Date.now();
        this.keys().forEach(key => {
            const item = localStorage.getItem(key);
            if (item && maxAgeHours) {
                const [, expires] = JSON.parse(item);
                now > Number(expires) && localStorage.removeItem(key);
            }
            else {
                localStorage.removeItem(key);
            }
        });
    }
    keys() {
        return Object.keys(localStorage).filter(key => key.indexOf(this.prefix) === 0);
    }
}
export const store = isLocalStorageAvailable() ? new Store() : new Map();
export function isLocalStorageAvailable() {
    try {
        const key = 'LocalStorageTest';
        const value = 'value';
        localStorage.setItem(key, value);
        const getValue = localStorage.getItem(key);
        localStorage.removeItem(key);
        return getValue === value;
    }
    catch {
        return false;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdXBsb2FkeC9saWIvc3RvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUM7QUFFNUIsTUFBTSxPQUFPLEtBQUs7SUFFaEIsWUFBcUIsU0FBUyxlQUFlO1FBQXhCLFdBQU0sR0FBTixNQUFNLENBQWtCO1FBRHJDLFFBQUcsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBQ3dCLENBQUM7SUFFakQsR0FBRyxDQUFDLEdBQVcsRUFBRSxLQUFRO1FBQ3ZCLElBQUksQ0FBQyxHQUFHO1lBQ04sWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVGLENBQUM7SUFFRCxHQUFHLENBQUMsR0FBVztRQUNiLE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNyRCxJQUFJLElBQUksRUFBRTtZQUNSLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxQyxPQUFPLEtBQUssSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1NBQ3hDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQVc7UUFDaEIsWUFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxLQUFLLENBQUMsV0FBVyxHQUFHLENBQUM7UUFDbkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQzlCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3hCLE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdkMsSUFBSSxJQUFJLElBQUksV0FBVyxFQUFFO2dCQUN2QixNQUFNLENBQUMsRUFBRSxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNyQyxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDdkQ7aUJBQU07Z0JBQ0wsWUFBWSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUM5QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLElBQUk7UUFDVixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDakYsQ0FBQztDQUNGO0FBRUQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLHVCQUF1QixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxFQUFrQixDQUFDO0FBRXpGLE1BQU0sVUFBVSx1QkFBdUI7SUFDckMsSUFBSTtRQUNGLE1BQU0sR0FBRyxHQUFHLGtCQUFrQixDQUFDO1FBQy9CLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQztRQUN0QixZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNqQyxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNDLFlBQVksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDN0IsT0FBTyxRQUFRLEtBQUssS0FBSyxDQUFDO0tBQzNCO0lBQUMsTUFBTTtRQUNOLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSE9VUiA9IDEwMDAgKiA2MCAqIDYwO1xuXG5leHBvcnQgY2xhc3MgU3RvcmU8VCA9IHN0cmluZz4ge1xuICBwcml2YXRlIHR0bCA9IDI0ICogSE9VUjtcbiAgY29uc3RydWN0b3IocmVhZG9ubHkgcHJlZml4ID0gJ1VQTE9BRFgtdjQuMC0nKSB7fVxuXG4gIHNldChrZXk6IHN0cmluZywgdmFsdWU6IFQpOiB2b2lkIHtcbiAgICB0aGlzLnR0bCAmJlxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5wcmVmaXggKyBrZXksIEpTT04uc3RyaW5naWZ5KFt2YWx1ZSwgRGF0ZS5ub3coKSArIHRoaXMudHRsXSkpO1xuICB9XG5cbiAgZ2V0KGtleTogc3RyaW5nKTogVCB8IG51bGwge1xuICAgIGNvbnN0IGl0ZW0gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnByZWZpeCArIGtleSk7XG4gICAgaWYgKGl0ZW0pIHtcbiAgICAgIGNvbnN0IFt2YWx1ZSwgZXhwaXJlc10gPSBKU09OLnBhcnNlKGl0ZW0pO1xuICAgICAgcmV0dXJuIHZhbHVlICYmIGV4cGlyZXMgPyB2YWx1ZSA6IG51bGw7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZGVsZXRlKGtleTogc3RyaW5nKTogdm9pZCB7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5wcmVmaXggKyBrZXkpO1xuICB9XG5cbiAgY2xlYXIobWF4QWdlSG91cnMgPSAwKTogdm9pZCB7XG4gICAgdGhpcy50dGwgPSBtYXhBZ2VIb3VycyAqIEhPVVI7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLmtleXMoKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICBjb25zdCBpdGVtID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICAgIGlmIChpdGVtICYmIG1heEFnZUhvdXJzKSB7XG4gICAgICAgIGNvbnN0IFssIGV4cGlyZXNdID0gSlNPTi5wYXJzZShpdGVtKTtcbiAgICAgICAgbm93ID4gTnVtYmVyKGV4cGlyZXMpICYmIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBrZXlzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKS5maWx0ZXIoa2V5ID0+IGtleS5pbmRleE9mKHRoaXMucHJlZml4KSA9PT0gMCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHN0b3JlID0gaXNMb2NhbFN0b3JhZ2VBdmFpbGFibGUoKSA/IG5ldyBTdG9yZSgpIDogbmV3IE1hcDxzdHJpbmcsIHN0cmluZz4oKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9jYWxTdG9yYWdlQXZhaWxhYmxlKCk6IGJvb2xlYW4ge1xuICB0cnkge1xuICAgIGNvbnN0IGtleSA9ICdMb2NhbFN0b3JhZ2VUZXN0JztcbiAgICBjb25zdCB2YWx1ZSA9ICd2YWx1ZSc7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCB2YWx1ZSk7XG4gICAgY29uc3QgZ2V0VmFsdWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgcmV0dXJuIGdldFZhbHVlID09PSB2YWx1ZTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=