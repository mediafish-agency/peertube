export declare const serverFilterHookObject: {
    'filter:api.videos.list.params': boolean;
    'filter:api.videos.list.result': boolean;
    'filter:api.video-playlist.videos.list.params': boolean;
    'filter:api.video-playlist.videos.list.result': boolean;
    'filter:api.accounts.videos.list.params': boolean;
    'filter:api.accounts.videos.list.result': boolean;
    'filter:api.video-channels.videos.list.params': boolean;
    'filter:api.video-channels.videos.list.result': boolean;
    'filter:api.user.me.videos.list.params': boolean;
    'filter:api.user.me.videos.list.result': boolean;
    'filter:api.overviews.videos.list.params': boolean;
    'filter:api.overviews.videos.list.result': boolean;
    'filter:api.user.me.subscription-videos.list.params': boolean;
    'filter:api.user.me.subscription-videos.list.result': boolean;
    'filter:api.search.videos.local.list.params': boolean;
    'filter:api.search.videos.local.list.result': boolean;
    'filter:api.search.videos.index.list.params': boolean;
    'filter:api.search.videos.index.list.result': boolean;
    'filter:api.search.video-channels.local.list.params': boolean;
    'filter:api.search.video-channels.local.list.result': boolean;
    'filter:api.search.video-channels.index.list.params': boolean;
    'filter:api.search.video-channels.index.list.result': boolean;
    'filter:api.search.video-playlists.local.list.params': boolean;
    'filter:api.search.video-playlists.local.list.result': boolean;
    'filter:api.search.video-playlists.index.list.params': boolean;
    'filter:api.search.video-playlists.index.list.result': boolean;
    'filter:api.video.get.result': boolean;
    'filter:api.video-channels.list.params': boolean;
    'filter:api.video-channels.list.result': boolean;
    'filter:api.video-channel.get.result': boolean;
    'filter:api.video.upload.accept.result': boolean;
    'filter:api.live-video.create.accept.result': boolean;
    'filter:api.video.pre-import-url.accept.result': boolean;
    'filter:api.video.pre-import-torrent.accept.result': boolean;
    'filter:api.video.post-import-url.accept.result': boolean;
    'filter:api.video.post-import-torrent.accept.result': boolean;
    'filter:api.video.update-file.accept.result': boolean;
    'filter:api.video.user-import.accept.result': boolean;
    'filter:api.video-thread.create.accept.result': boolean;
    'filter:api.video-comment-reply.create.accept.result': boolean;
    'filter:api.video.upload.video-attribute.result': boolean;
    'filter:api.video.import-url.video-attribute.result': boolean;
    'filter:api.video.import-torrent.video-attribute.result': boolean;
    'filter:api.video.live.video-attribute.result': boolean;
    'filter:api.video.user-import.video-attribute.result': boolean;
    'filter:api.video-threads.list.params': boolean;
    'filter:api.video-threads.list.result': boolean;
    'filter:api.video-thread-comments.list.params': boolean;
    'filter:api.video-thread-comments.list.result': boolean;
    'filter:api.server.stats.get.result': boolean;
    'filter:video.auto-blacklist.result': boolean;
    'filter:api.user.signup.allowed.result': boolean;
    'filter:api.user.request-signup.allowed.result': boolean;
    'filter:api.download.video.allowed.result': boolean;
    'filter:api.download.generated-video.allowed.result': boolean;
    'filter:api.download.torrent.allowed.result': boolean;
    'filter:html.embed.video.allowed.result': boolean;
    'filter:html.embed.video-playlist.allowed.result': boolean;
    'filter:html.client.json-ld.result': boolean;
    'filter:job-queue.process.params': boolean;
    'filter:job-queue.process.result': boolean;
    'filter:transcoding.manual.resolutions-to-transcode.result': boolean;
    'filter:transcoding.auto.resolutions-to-transcode.result': boolean;
    'filter:activity-pub.remote-video-comment.create.accept.result': boolean;
    'filter:activity-pub.activity.context.build.result': boolean;
    'filter:activity-pub.video.json-ld.build.result': boolean;
    'filter:feed.podcast.rss.create-custom-xmlns.result': boolean;
    'filter:feed.podcast.channel.create-custom-tags.result': boolean;
    'filter:feed.podcast.video.create-custom-tags.result': boolean;
    'filter:api.user.me.get.result': boolean;
};
export type ServerFilterHookName = keyof typeof serverFilterHookObject;
export declare const serverActionHookObject: {
    'action:application.listening': boolean;
    'action:notifier.notification.created': boolean;
    'action:api.video.updated': boolean;
    'action:api.video.deleted': boolean;
    'action:api.video.uploaded': boolean;
    'action:api.video.viewed': boolean;
    'action:api.video.file-updated': boolean;
    'action:api.video-channel.created': boolean;
    'action:api.video-channel.updated': boolean;
    'action:api.video-channel.deleted': boolean;
    'action:api.live-video.created': boolean;
    'action:live.video.state.updated': boolean;
    'action:api.video-thread.created': boolean;
    'action:api.video-comment-reply.created': boolean;
    'action:api.video-comment.deleted': boolean;
    'action:api.video-caption.created': boolean;
    'action:api.video-caption.deleted': boolean;
    'action:api.user.blocked': boolean;
    'action:api.user.unblocked': boolean;
    'action:api.user.registered': boolean;
    'action:api.user.requested-registration': boolean;
    'action:api.user.created': boolean;
    'action:api.user.deleted': boolean;
    'action:api.user.updated': boolean;
    'action:api.user.oauth2-got-token': boolean;
    'action:api.video-playlist-element.created': boolean;
    'action:activity-pub.remote-video.created': boolean;
    'action:activity-pub.remote-video.updated': boolean;
};
export type ServerActionHookName = keyof typeof serverActionHookObject;
export declare const serverHookObject: {
    'filter:api.videos.list.params': boolean;
    'filter:api.videos.list.result': boolean;
    'filter:api.video-playlist.videos.list.params': boolean;
    'filter:api.video-playlist.videos.list.result': boolean;
    'filter:api.accounts.videos.list.params': boolean;
    'filter:api.accounts.videos.list.result': boolean;
    'filter:api.video-channels.videos.list.params': boolean;
    'filter:api.video-channels.videos.list.result': boolean;
    'filter:api.user.me.videos.list.params': boolean;
    'filter:api.user.me.videos.list.result': boolean;
    'filter:api.overviews.videos.list.params': boolean;
    'filter:api.overviews.videos.list.result': boolean;
    'filter:api.user.me.subscription-videos.list.params': boolean;
    'filter:api.user.me.subscription-videos.list.result': boolean;
    'filter:api.search.videos.local.list.params': boolean;
    'filter:api.search.videos.local.list.result': boolean;
    'filter:api.search.videos.index.list.params': boolean;
    'filter:api.search.videos.index.list.result': boolean;
    'filter:api.search.video-channels.local.list.params': boolean;
    'filter:api.search.video-channels.local.list.result': boolean;
    'filter:api.search.video-channels.index.list.params': boolean;
    'filter:api.search.video-channels.index.list.result': boolean;
    'filter:api.search.video-playlists.local.list.params': boolean;
    'filter:api.search.video-playlists.local.list.result': boolean;
    'filter:api.search.video-playlists.index.list.params': boolean;
    'filter:api.search.video-playlists.index.list.result': boolean;
    'filter:api.video.get.result': boolean;
    'filter:api.video-channels.list.params': boolean;
    'filter:api.video-channels.list.result': boolean;
    'filter:api.video-channel.get.result': boolean;
    'filter:api.video.upload.accept.result': boolean;
    'filter:api.live-video.create.accept.result': boolean;
    'filter:api.video.pre-import-url.accept.result': boolean;
    'filter:api.video.pre-import-torrent.accept.result': boolean;
    'filter:api.video.post-import-url.accept.result': boolean;
    'filter:api.video.post-import-torrent.accept.result': boolean;
    'filter:api.video.update-file.accept.result': boolean;
    'filter:api.video.user-import.accept.result': boolean;
    'filter:api.video-thread.create.accept.result': boolean;
    'filter:api.video-comment-reply.create.accept.result': boolean;
    'filter:api.video.upload.video-attribute.result': boolean;
    'filter:api.video.import-url.video-attribute.result': boolean;
    'filter:api.video.import-torrent.video-attribute.result': boolean;
    'filter:api.video.live.video-attribute.result': boolean;
    'filter:api.video.user-import.video-attribute.result': boolean;
    'filter:api.video-threads.list.params': boolean;
    'filter:api.video-threads.list.result': boolean;
    'filter:api.video-thread-comments.list.params': boolean;
    'filter:api.video-thread-comments.list.result': boolean;
    'filter:api.server.stats.get.result': boolean;
    'filter:video.auto-blacklist.result': boolean;
    'filter:api.user.signup.allowed.result': boolean;
    'filter:api.user.request-signup.allowed.result': boolean;
    'filter:api.download.video.allowed.result': boolean;
    'filter:api.download.generated-video.allowed.result': boolean;
    'filter:api.download.torrent.allowed.result': boolean;
    'filter:html.embed.video.allowed.result': boolean;
    'filter:html.embed.video-playlist.allowed.result': boolean;
    'filter:html.client.json-ld.result': boolean;
    'filter:job-queue.process.params': boolean;
    'filter:job-queue.process.result': boolean;
    'filter:transcoding.manual.resolutions-to-transcode.result': boolean;
    'filter:transcoding.auto.resolutions-to-transcode.result': boolean;
    'filter:activity-pub.remote-video-comment.create.accept.result': boolean;
    'filter:activity-pub.activity.context.build.result': boolean;
    'filter:activity-pub.video.json-ld.build.result': boolean;
    'filter:feed.podcast.rss.create-custom-xmlns.result': boolean;
    'filter:feed.podcast.channel.create-custom-tags.result': boolean;
    'filter:feed.podcast.video.create-custom-tags.result': boolean;
    'filter:api.user.me.get.result': boolean;
} & {
    'action:application.listening': boolean;
    'action:notifier.notification.created': boolean;
    'action:api.video.updated': boolean;
    'action:api.video.deleted': boolean;
    'action:api.video.uploaded': boolean;
    'action:api.video.viewed': boolean;
    'action:api.video.file-updated': boolean;
    'action:api.video-channel.created': boolean;
    'action:api.video-channel.updated': boolean;
    'action:api.video-channel.deleted': boolean;
    'action:api.live-video.created': boolean;
    'action:live.video.state.updated': boolean;
    'action:api.video-thread.created': boolean;
    'action:api.video-comment-reply.created': boolean;
    'action:api.video-comment.deleted': boolean;
    'action:api.video-caption.created': boolean;
    'action:api.video-caption.deleted': boolean;
    'action:api.user.blocked': boolean;
    'action:api.user.unblocked': boolean;
    'action:api.user.registered': boolean;
    'action:api.user.requested-registration': boolean;
    'action:api.user.created': boolean;
    'action:api.user.deleted': boolean;
    'action:api.user.updated': boolean;
    'action:api.user.oauth2-got-token': boolean;
    'action:api.video-playlist-element.created': boolean;
    'action:activity-pub.remote-video.created': boolean;
    'action:activity-pub.remote-video.updated': boolean;
};
export type ServerHookName = keyof typeof serverHookObject;
export interface ServerHook {
    runHook<T>(hookName: ServerHookName, result?: T, params?: any): Promise<T>;
}
//# sourceMappingURL=server-hook.model.d.ts.map